name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ubuntu-20.04  

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.7'

      - name: Install dependencies
        working-directory: ./server_api
        run: |  
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: ./server_api
        run: |
          mkdir -p torchapp/toxic_model/trained_models
          wget "https://huggingface.co/Izlaster/ToxicMetr/resolve/main/server_api/torchapp/model/best_model_state.bin?download=true" -O torchapp/toxic_model/trained_models/best_model_state.bin
          python manage.py test

      - name: Build Docker image
        working-directory: ./server_api
        run: |
          docker build -t toxic-metr-app .
          docker run -d -p 8000:8000 toxic-metr-app

      - name: Check service health
        run: |
          sleep 10
          docker ps
          curl -X POST -H "Content-Type: application/json" -d '{"text": "Test"}' http://localhost:8000/api/classify/ || exit 1 

  cleanup:
    runs-on: ubuntu-20.04  
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Stop Docker Compose
        working-directory: ./server_api  
        run: docker-compose down
